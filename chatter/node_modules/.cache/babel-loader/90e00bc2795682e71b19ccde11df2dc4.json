{"ast":null,"code":"var _jsxFileName = \"/Users/silvio.machado/dev/chat-app/chatter/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nexport const ChatWindow = () => {\n  const [message, setMessage] = useState('');\n  const [receivedMessage, setReceivedMessage] = useState(['']);\n  const webSocket = new WebSocket('ws://127.0.0.1:8080/chat');\n\n  webSocket.onmessage = event => {\n    console.log('received message', event);\n    const messages = receivedMessage;\n    messages.push(event.data);\n    setReceivedMessage(messages);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    webSocket.send(message);\n    setMessage('');\n  };\n\n  const handleChange = event => setMessage(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"messageArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, console.log(Array.isArray(receivedMessage)), receivedMessage.map(element => {\n    console.log(element);\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"messageInput\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/silvio.machado/dev/chat-app/chatter/src/App.js"],"names":["React","useState","ChatWindow","message","setMessage","receivedMessage","setReceivedMessage","webSocket","WebSocket","onmessage","event","console","log","messages","push","data","handleSubmit","preventDefault","send","handleChange","target","value","Array","isArray","map","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAE9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAtD;AAEA,QAAMM,SAAS,GAAG,IAAIC,SAAJ,CAAc,0BAAd,CAAlB;;AACAD,EAAAA,SAAS,CAACE,SAAV,GAAuBC,KAAD,IAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AACA,UAAMG,QAAQ,GAAGR,eAAjB;AACAQ,IAAAA,QAAQ,CAACC,IAAT,CAAcJ,KAAK,CAACK,IAApB;AAEAT,IAAAA,kBAAkB,CAACO,QAAD,CAAlB;AACD,GAND;;AAQA,QAAMG,YAAY,GAAIN,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACO,cAAN;AACAV,IAAAA,SAAS,CAACW,IAAV,CAAef,OAAf;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMA,QAAMe,YAAY,GAAGT,KAAK,IAAIN,UAAU,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAxC;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACC,OAAN,CAAclB,eAAd,CAAZ,CADH,EAEGA,eAAe,CAACmB,GAAhB,CAAsBC,OAAD,IAAa;AAACd,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AAAqB,GAAxD,CAFH,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,cAAxB;AAAuC,IAAA,QAAQ,EAAEG,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALF,CADF;AAaD,CAnCM","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nexport const ChatWindow = () => {\n\n  const [message, setMessage] = useState('');\n  const [receivedMessage, setReceivedMessage] = useState(['']);\n\n  const webSocket = new WebSocket('ws://127.0.0.1:8080/chat');\n  webSocket.onmessage = (event) => {\n    console.log('received message', event);\n    const messages = receivedMessage;\n    messages.push(event.data);\n\n    setReceivedMessage(messages);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    webSocket.send(message);\n    setMessage('');\n  }\n\n  const handleChange = event => setMessage(event.target.value);\n\n  return (\n    <div>\n      <div id='messageArea'>\n        {console.log(Array.isArray(receivedMessage))}\n        {receivedMessage.map( (element) => {console.log(element)})}\n      </div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input type='text' name='messageInput' onChange={handleChange} />\n        </form>\n      </div>\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}