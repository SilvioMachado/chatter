{"ast":null,"code":"var _jsxFileName = \"/Users/silvio.machado/dev/chat-app/chatter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nexport const ChatWindow = () => {\n  const [message, setMessage] = useState('');\n  const [receivedMessage, setReceivedMessage] = useState(['']);\n  const [webSocket, setWebSocket] = useState();\n  useEffect(async () => {\n    await setWebSocket((await new WebSocket('ws://127.0.0.1:8080/chat')));\n\n    webSocket.onmessage = event => {\n      console.log('received message', event);\n      const messages = receivedMessage;\n      messages.push(event.data);\n      setReceivedMessage(messages);\n    };\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    webSocket.send(message);\n    setMessage('');\n  };\n\n  const handleChange = event => setMessage(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"messageArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, console.log(Array.isArray(receivedMessage)), receivedMessage.map(element => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, element);\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"messageInput\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/silvio.machado/dev/chat-app/chatter/src/App.js"],"names":["React","useState","useEffect","ChatWindow","message","setMessage","receivedMessage","setReceivedMessage","webSocket","setWebSocket","WebSocket","onmessage","event","console","log","messages","push","data","handleSubmit","preventDefault","send","handleChange","target","value","Array","isArray","map","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAE9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAtD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMO,YAAY,EAAC,MAAM,IAAIC,SAAJ,CAAc,0BAAd,CAAP,EAAlB;;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAuBC,KAAD,IAAW;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AACA,YAAMG,QAAQ,GAAGT,eAAjB;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcJ,KAAK,CAACK,IAApB;AAEAV,MAAAA,kBAAkB,CAACQ,QAAD,CAAlB;AACD,KAND;AAOD,GATQ,EASN,EATM,CAAT;;AAaA,QAAMG,YAAY,GAAIN,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACO,cAAN;AACAX,IAAAA,SAAS,CAACY,IAAV,CAAehB,OAAf;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMA,QAAMgB,YAAY,GAAGT,KAAK,IAAIP,UAAU,CAACO,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAxC;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACC,OAAN,CAAcnB,eAAd,CAAZ,CADH,EAEGA,eAAe,CAACoB,GAAhB,CAAsBC,OAAD,IAAa;AACjC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CAFH,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,cAAxB;AAAuC,IAAA,QAAQ,EAAEG,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAXF,CADF;AAmBD,CA9CM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nexport const ChatWindow = () => {\n\n  const [message, setMessage] = useState('');\n  const [receivedMessage, setReceivedMessage] = useState(['']);\n  const [webSocket, setWebSocket] = useState();\n  \n  useEffect(async () => {\n    await setWebSocket(await new WebSocket('ws://127.0.0.1:8080/chat'));\n    webSocket.onmessage = (event) => {\n      console.log('received message', event);\n      const messages = receivedMessage;\n      messages.push(event.data);\n  \n      setReceivedMessage(messages);\n    }\n  }, []);\n\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    webSocket.send(message);\n    setMessage('');\n  }\n\n  const handleChange = event => setMessage(event.target.value);\n\n  return (\n    <div>\n      <div id='messageArea'>\n        {console.log(Array.isArray(receivedMessage))}\n        {receivedMessage.map( (element) => {\n          return (\n            <div>\n              {element}\n            </div>\n          )\n        })}\n      </div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input type='text' name='messageInput' onChange={handleChange} />\n        </form>\n      </div>\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}