{"ast":null,"code":"var _jsxFileName = \"/Users/silvio.machado/dev/chat-app/chatter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nconst webSocket = new WebSocket('ws://192.168.15.12:8080/chat');\nexport const ChatWindow = () => {\n  const [message, setMessage] = useState('');\n  const [receivedMessage, setReceivedMessage] = useState([]);\n  const [messageCount, setMessageCount] = useState(0);\n  useEffect(() => {\n    webSocket.onmessage = event => {\n      setReceivedMessage(receivedMessage => [...receivedMessage, event.data]);\n      console.log('received messages', receivedMessage);\n      new Notification('Voce tem uma nova mensagem vadia');\n    }; // eslint-disable-next-line\n\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    webSocket.send(message);\n    setMessage(null);\n  };\n\n  const handleChange = event => setMessage(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"messageArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, receivedMessage.map(element => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, element);\n  })), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"messageInput\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/silvio.machado/dev/chat-app/chatter/src/App.js"],"names":["React","useState","useEffect","webSocket","WebSocket","ChatWindow","message","setMessage","receivedMessage","setReceivedMessage","messageCount","setMessageCount","onmessage","event","data","console","log","Notification","handleSubmit","preventDefault","send","handleChange","target","value","map","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,MAAMC,SAAS,GAAG,IAAIC,SAAJ,CAAc,8BAAd,CAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,SAAS,CAACS,SAAV,GAAuBC,KAAD,IAAW;AAC/BJ,MAAAA,kBAAkB,CAACD,eAAe,IAAI,CAAC,GAAGA,eAAJ,EAAqBK,KAAK,CAACC,IAA3B,CAApB,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCR,eAAjC;AACA,UAAIS,YAAJ,CAAiB,kCAAjB;AAED,KALD,CADc,CAOd;;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,YAAY,GAAIL,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AACAhB,IAAAA,SAAS,CAACiB,IAAV,CAAed,OAAf;AACAC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAMA,QAAMc,YAAY,GAAGR,KAAK,IAAIN,UAAU,CAACM,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAxC;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,eAAe,CAACgB,GAAhB,CAAsBC,OAAD,IAAa;AACjC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CADH,CADF,EAWI;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,cAAxB;AAAuC,IAAA,QAAQ,EAAEG,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXJ,CADF;AAmBD,CA1CM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst webSocket = new WebSocket('ws://192.168.15.12:8080/chat');\n\nexport const ChatWindow = () => {\n  const [message, setMessage] = useState('');\n  const [receivedMessage, setReceivedMessage] = useState([]);\n  const [messageCount, setMessageCount] = useState(0);\n\n  useEffect(() => {    \n    webSocket.onmessage = (event) => {\n      setReceivedMessage(receivedMessage => [...receivedMessage, event.data]);\n      console.log('received messages', receivedMessage);\n      new Notification('Voce tem uma nova mensagem vadia');\n      \n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    webSocket.send(message);\n    setMessage(null);\n  }\n\n  const handleChange = event => setMessage(event.target.value);\n\n  return (\n    <div>\n      <div id='messageArea'>\n        {receivedMessage.map( (element) => {\n          return (\n            <div>\n              {element}\n            </div>\n          )\n        })}\n      </div>\n\n        <form onSubmit={handleSubmit}>\n          <input type='text' name='messageInput' onChange={handleChange} />\n          <input type='submit' value='send' />\n        </form>\n\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}